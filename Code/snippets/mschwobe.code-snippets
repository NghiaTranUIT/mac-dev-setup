{
  "Comment: Single /": {
    "prefix": "/",
    "body": [
      "$LINE_COMMENT -----------------------------------------------------------------------------",
      ""
    ],
    "description": "Comment: Single /"
  },
  "Comment: Double //": {
    "prefix": "/",
    "body": [
      "$LINE_COMMENT -----------------------------------------------------------------------------",
      "$LINE_COMMENT ${1:sectionName}",
      "$LINE_COMMENT -----------------------------------------------------------------------------",
      ""
    ],
    "description": "Comment: Double //"
  },
  "Console: log": {
    "scope": "javascript,typescript",
    "prefix": "conlog",
    "body": [
      "console.log('⚡️ ${1}', ${1});"
    ],
    "description": "Console: log"
  },
  "Console: log stringified": {
    "scope": "javascript,typescript",
    "prefix": "constr",
    "body": [
      "console.log('⚡️ ${1}', JSON.stringify(${1}, null, 2));"
    ],
    "description": "Console: log stringified"
  },
  "Array of length N": {
    "prefix": "arrn",
    "body": [
      "[...Array(${1:n}).keys()]"
    ],
    "description": "JS: Array of length N"
  },
  "Jest: test": {
    "scope": "javascript,typescript",
    "prefix": "jt",
    "body": [
      "test('Should', () => {",
      "  expect(${1:provided}).toEqual(${0:expected});",
      "});"
    ],
    "description": "Jest: test"
  },
  "Jest: describe": {
    "scope": "javascript,typescript",
    "prefix": "jd",
    "body": [
      "describe('${1:moduleName}', () => {",
      "  ${0}",
      "});"
    ],
    "description": "Jest: describe"
  },
  "Jest: describe test": {
    "scope": "javascript,typescript",
    "prefix": "jdt",
    "body": [
      "import ${TM_FILENAME/([^.]+).*/$1/} from './${TM_FILENAME/([^.]+).*/$1/}'",
      "",
      "$LINE_COMMENT -----------------------------------------------------------------------------",
      "",
      "describe('${TM_FILENAME/([^.]+).*/$1/}', () => {",
      "  test('TODO: Write `${TM_FILENAME/([^.]+).*/$1/}` tests', () => {",
      "    expect(typeof ${TM_FILENAME/([^.]+).*/$1/}).toEqual(${0:'function'});",
      "  });",
      "});"
    ],
    "description": "Jest: describe and test"
  },
  "React: arrowFn classnames prop-types": {
    "prefix": "rafccp",
    "body": [
      "import cc from 'classcat';",
      "import PropTypes from 'prop-types';",
      "",
      "import styles from './${TM_FILENAME/([^.]+).*/$1/}.module.css';",
      "",
      "$LINE_COMMENT -----------------------------------------------------------------------------",
      "",
      "const ${TM_FILENAME/([^.]+).*/$1/} = ({ children, className, ...props }) => (",
      "  <div",
      "    className={cc({",
      "      [className]: true,",
      "      [styles.root]: true,",
      "    })}",
      "    {...props}",
      "  >",
      "    {children}",
      "  </div>",
      ");",
      "",
      "${TM_FILENAME/([^.]+).*/$1/}.propTypes = {",
      "  children: PropTypes.node.isRequired,",
      "  className: PropTypes.string,",
      "};",
      "",
      "${TM_FILENAME/([^.]+).*/$1/}.defaultProps = {",
      "  className: undefined,",
      "};",
      "",
      "$LINE_COMMENT -----------------------------------------------------------------------------",
      "",
      "export default ${TM_FILENAME/([^.]+).*/$1/};"
    ],
    "description": "Creates a React arrow function component with CSS modules, classcat, and prop-types"
  },
  "React: storybook story": {
    "prefix": "rsb",
    "body": [
      "import ${TM_FILENAME/([^.]+).*/$1/} from './${TM_FILENAME/([^.]+).*/$1/}';",
      "",
      "// -----------------------------------------------------------------------------",
      "",
      "const Template = (args) => <${TM_FILENAME/([^.]+).*/$1/} {...args} />;",
      "",
      "const Meta = {",
      "  title: 'Components/${TM_FILENAME/([^.]+).*/$1/}',",
      "  component: ${TM_FILENAME/([^.]+).*/$1/},",
      "};",
      "",
      "export const Default = Template.bind({});",
      "Default.args = {",
      "  children: 'Example',",
      "};",
      "",
      "// -----------------------------------------------------------------------------",
      "",
      "export default Meta;",
      ""
    ],
    "description": "React: storybook story"
  }
}
